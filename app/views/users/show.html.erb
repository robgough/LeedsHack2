<script src="http://d3js.org/d3.v3.min.js"></script>

<style>
path {
	stroke-width: 1;
	fill: none; /* change to none */
}

.line1 {
	stroke: #cc3333;
	shape-rendering: geometricPrecision;
}

.axis {
	shape-rendering: geometricPrecision;
}

.xaxis line {
	stroke: lightgrey;
}

.xaxis .minor {
	stroke-opacity: .5;
}

.xaxis path {
	display:none;
}

.xaxis text, .yaxis text {
	font-size:8px;
}

.yaxis line {
	stroke: lightgrey;
}
</style>

<h1>Profile</h1>

<p>Show by <a href="?mode=thirty">last 30 days</a>, <a href="?mode=year">year</a>, or <a href="?mode=all">all time</a>.</p>
<br />
<p id="total_loss"></p>
<p id="current_value"></p>

<svg width="600" height="300">
</svg>

<% if current_user && @user.id == current_user.id %>
	<br />
	<% if @user.public_profile %>
		<p>This page is available to everyone at <a href="">this link.</a> 
		If you wish to make it private you can change your settings <a href="<%= settings_users_path %>" alt="settings">here</a>.</p>
	<% else %>
		<p>Your profile is currently set to private. If you would like it to be publicly available
		then you can change your setting <a href="<%= settings_users_path %>" alt="settings">here</a>.</p>
	<% end %>
<% end %>

<script type="text/javascript">
    var dataurl = "/weights/<%= @user.id %>.json";

    function onDataReceived(data) {
		var w = 600,
			h = 300,
			padding = 30;

		var svg = d3.select("svg");

		var min = 500,
			max = 100;

		data.forEach(function(d) {
			var pounds = d["weight"].pounds;
			if (pounds < min)
				min = pounds;
			if (pounds > max)
				max = pounds;
		});

		min = min - 5;
		max = max + 5;

		var total_loss = data[0]["weight"].pounds - data[data.length-1]["weight"].pounds
		var lossText = total_loss > 0 ? total_loss + " pounds gained." : Math.abs(total_loss) + " pounds lost."
		$('p#total_loss').replaceWith(lossText);

		var yScale = d3.scale.linear()
			.domain([min, max])
			.range([h - padding, padding]); // reverse, as top starts at 0

		var mindate = new Date(data[data.length -1]["weight"]["date"]),
			maxdate = new Date;

		var xScale = d3.time.scale()
			.domain([mindate, maxdate])
			.range([padding, w - padding]); // width minus padding for both sides

		var yAxis = d3.svg.axis()
			.orient("left")
			.scale(yScale)
			.tickSize(-w + (padding * 2),0,0);

		var xAxis = d3.svg.axis()
			.orient("bottom")
			.scale(xScale)
			/*
			.ticks(d3.time.months, 2)
			.tickSubdivide(1)
			.tickFormat(d3.time.format("%b '%y"))*/;

		svg.append("g")
			.attr("class", "yaxis")
			.attr("transform", "translate(" + padding + ",0)")
			.call(yAxis);

		svg.append("g")
			.attr("class", "xaxis")
			.attr("transform", "translate(0, " + (h - padding) + ")")
			.call(xAxis);

    	var line1 = d3.svg.line()
    		.y(function(d, i) {
    			console.log("plotting X value for " + d["weight"]["pounds"] + " to be at " + yScale(d["weight"]["pounds"]));
    			return yScale(d["weight"]["pounds"]);
    		})
    		.x(function(d) {
    			console.log("plotting Y value for " + d["weight"]["date"] + " to be at " + xScale(new Date(d["weight"]["date"])));
    			return xScale(new Date(d["weight"]["date"]));
    		})
    		.interpolate("basis");

    	svg.append("path")
    	.attr("d", line1(data))
    	.attr("class", "line1");
    };

    $.ajax({
		url: dataurl,
		method: 'GET',
		data: 'mode=<%= @mode %>',
		dataType: 'json',
		success: onDataReceived
	});
</script>

